#!/usr/bin/env php
<?php

$recursionLimit = 10;
$findVendor = function ($dirName = 'vendor/bin', $dir = __DIR__) use (&$findVendor, &$recursionLimit) {
	if (!$recursionLimit--) {
		throw new \Exception('Cannot find vendor directory.');
	}
	$found = $dir . "/$dirName";
	if (is_dir($found) || is_file($found)) {
		return dirname($found);
	}
	return $findVendor($dirName, dirname($dir));
};
$vendorDir = $findVendor();
$testsDir = dirname($vendorDir) . '/tests';

$position = $_SERVER['argc'] - 1;
if ($position === 0) {
	$_SERVER['argv'][++$position] = $testsDir;
}
$_SERVER['argv'][++$position] = '-s';
$_SERVER['argv'][++$position] = '-p';
$_SERVER['argv'][++$position] = 'php';
$_SERVER['argv'][++$position] = '-c';

$os = stristr(PHP_OS, 'LINUX') ? 'unix' : 'win';
$_SERVER['argv'][++$position] = $testsDir . "/php-$os.ini";

// $_SERVER['argv'][++$position] = '--coverage';
// $_SERVER['argv'][++$position] = 'coverage.html';
// $_SERVER['argv'][++$position] = '--coverage-src';
// $_SERVER['argv'][++$position] = './../app';

$dir = $testsDir . '/_temp';

if (!is_dir($dir)) {
	mkdir($dir);
}

$rdi = new \RecursiveDirectoryIterator($dir, \RecursiveDirectoryIterator::SKIP_DOTS);
$rii = new \RecursiveIteratorIterator($rdi, \RecursiveIteratorIterator::CHILD_FIRST);
foreach ($rii as $entry) {
	if ($entry->isDir()) {
		rmdir($entry);
	} else {
		unlink($entry);
	}
}

require $vendorDir . '/bin/tester';
